<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
<!-- Modified from: https://github.com/ros-controls/ros2_control_demos/blob/master/ros2_control_demo_description/diffbot/urdf/diffbot_description.urdf.xacro -->

  <xacro:macro name="protobot_core" params="prefix">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="chassis_mass" value="0.5" /> <!-- arbitrary value for base mass -->
  <xacro:property name="chassis_length" value="0.3" />
  <xacro:property name="chassis_width" value="0.25" />
  <xacro:property name="chassis_height" value="0.15" />
  <xacro:property name="wheel_base" value="0.31" /> <!-- make this bigger than chassis_width -->
  <xacro:property name="wheel_mass" value="0.3" /> <!-- arbitrary value for wheel mass -->
  <xacro:property name="wheel_width" value="0.030" />
  <xacro:property name="wheel_radius" value="0.05" />
  <xacro:property name="wheel_axis_vertical_offset" value="-0.04" /> <!-- signed distance from chassis center to wheel axis -->
  <xacro:property name="caster_wheel_mass" value="0.1" /> <!-- arbitrary value for caster wheel mass -->
  <xacro:property name="caster_wheel_radius" value="${-wheel_axis_vertical_offset + wheel_radius - chassis_height/2}" />

  <!-- Dummy link with no inertiais used as root (for gazebo) -->
  <link name="base_link"/>

  <!-- Chassis Link -->
  <link name="${prefix}chassis">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${chassis_mass}"/>
      <inertia
        ixx="${chassis_mass / 12.0 * (chassis_width*chassis_width + chassis_height*chassis_height)}" ixy="0.0" ixz="0.0"
        iyy="${chassis_mass / 12.0 * (chassis_height*chassis_height + chassis_length*chassis_length)}" iyz="0.0"
        izz="${chassis_mass / 12.0 * (chassis_length*chassis_length + chassis_width*chassis_width)}"/>
      </inertial>
    </link>

    <joint name="${prefix}base_to_chassis_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}chassis"/>
      <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>

    <joint name="${prefix}left_wheel_joint" type="continuous">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}left_wheel"/>
      <origin xyz="0 ${chassis_length/2} ${wheel_axis_vertical_offset}" rpy="${-PI/2} 0 0"/>
      <axis xyz="0 0 1"/>
      <!-- <dynamics damping="0.2"/>
      <limit effort="100" velocity="1.0"/> -->
    </joint>

    <!-- left wheel Link -->
    <link name="${prefix}left_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <!-- Sphere has point-contact with the ground, which makes simulation more stable -->
          <sphere radius="${wheel_radius}"/> 
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0.0" ixz="0.0"
          iyy="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0.0"
          izz="${wheel_mass / 2.0 * wheel_radius*wheel_radius}"/>
        </inertial>
      </link>

    <joint name="${prefix}right_wheel_joint" type="continuous">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}right_wheel"/>
      <origin xyz="0 ${-chassis_length/2} ${wheel_axis_vertical_offset}" rpy="${PI/2} 0 0"/>
      <axis xyz="0 0 -1"/> <!-- Note that "Forward" rotation is opposite compared to the left wheel -->
      <!-- <dynamics damping="0.2"/>
      <limit effort="100" velocity="1.0"/> -->
    </joint>

    <!-- right wheel Link -->
    <link name="${prefix}right_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <!-- Sphere has point-contact with the ground, which makes simulation more stable -->
          <sphere radius="${wheel_radius}"/> 
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0.0" ixz="0.0"
          iyy="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0.0"
          izz="${wheel_mass / 2.0 * wheel_radius*wheel_radius}"/>
        </inertial>
      </link>

    <joint name="${prefix}front_caster_wheel_joint" type="fixed">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}front_caster_wheel"/>
      <origin xyz="${chassis_length/2 - caster_wheel_radius} 0 ${-chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- caster front wheel Link -->
    <link name="${prefix}front_caster_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${caster_wheel_mass}"/>
        <inertia
          ixx="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" ixy="0.0" ixz="0.0"
          iyy="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" iyz="0.0"
          izz="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}"/>
        </inertial>
      </link>

    <joint name="${prefix}rear_caster_wheel_joint" type="fixed">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}rear_caster_wheel"/>
      <origin xyz="${-chassis_length/2 + caster_wheel_radius} 0 ${-chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- caster rear wheel Link -->
    <link name="${prefix}rear_caster_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${caster_wheel_mass}"/>
        <inertia
          ixx="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" ixy="0.0" ixz="0.0"
          iyy="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" iyz="0.0"
          izz="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}"/>
        </inertial>
      </link>

    <!-- Hat joint -->
    <joint name="${prefix}hat_joint" type="fixed">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}hat"/>
      <origin xyz="0 0 ${chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- Hat link -->
    <link name="${prefix}hat">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find protobot_description)/meshes/cowboy_hat.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="brown"/>
      </visual>
    </link>

  </xacro:macro>

</robot>
