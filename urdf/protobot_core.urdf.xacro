<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
<!-- Modified from: https://github.com/ros-controls/ros2_control_demos/blob/master/ros2_control_demo_description/diffbot/urdf/diffbot_description.urdf.xacro -->

  <xacro:macro name="protobot_core" params="prefix
    chassis_mass:=1.0
    chassis_length:=0.3
    chassis_width:=0.25
    chassis_height:=0.15
    wheel_base:=0.31
    wheel_mass:=0.2
    wheel_width:=0.030
    wheel_radius:=0.06
    wheel_axis_wrt_chassis_vertical:=0.04
    wheel_axis_wrt_chassis_horizontal:=0.28
    caster_wheel_radius:=0.02
    caster_wheel_mass:=0.1">
    <!-- to keep the robot horizontal, set:
      caster_wheel_radius = wheel_radius - wheel_axis_wrt_chassis_vertical-->

    <!-- Frame at the midpoint of the wheel axis serves a the pendulum pivot point, and has no inertial properties for gazebo. -->
    <link name="base_link"/>

    <!-- Coordinate frame that is analogous to the mass of the pendulum. 
    It is located at the robot's center of mass, and the x-axis intersects the base_link. -->
    <link name="${prefix}pendulum_mass"/>

    <joint name="${prefix}pendulum_mass_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}pendulum_mass"/>
      <origin 
        xyz="${-wheel_axis_wrt_chassis_horizontal+chassis_length/2} 0 ${-wheel_axis_wrt_chassis_vertical+chassis_height/2}" 
        rpy="0 ${atan2(-wheel_axis_wrt_chassis_vertical+chassis_height/2, -(-wheel_axis_wrt_chassis_horizontal+chassis_length/2))} 0"/>
    </joint>

    <!-- Chassis Link -->
    <link name="${prefix}chassis">
      <collision>
        <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        </geometry>
        <material name="orange"/>
      </visual>

      <inertial>
        <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        <mass value="${chassis_mass}"/>
        <inertia
          ixx="${chassis_mass / 12.0 * (chassis_width*chassis_width + chassis_height*chassis_height)}" ixy="0.0" ixz="0.0"
          iyy="${chassis_mass / 12.0 * (chassis_height*chassis_height + chassis_length*chassis_length)}" iyz="0.0"
          izz="${chassis_mass / 12.0 * (chassis_length*chassis_length + chassis_width*chassis_width)}"/>
        </inertial>
    </link>

    <joint name="${prefix}base_to_chassis_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}chassis"/>
      <origin xyz="${-wheel_axis_wrt_chassis_horizontal} 0 ${-wheel_axis_wrt_chassis_vertical}" rpy="0 0 0" />
    </joint>

    <joint name="${prefix}left_wheel_joint" type="continuous">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}left_wheel"/>
      <origin xyz="0 ${wheel_base/2} 0" rpy="${-pi/2} 0 0"/>
      <axis xyz="0 0 1"/>
      <!-- <dynamics damping="0.2"/>
      <limit effort="100" velocity="1.0"/> -->
    </joint>

    <!-- left wheel Link -->
    <link name="${prefix}left_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <!-- Sphere has point-contact with the ground, which makes simulation more stable -->
          <sphere radius="${wheel_radius}"/> 
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0.0" ixz="0.0"
          iyy="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0.0"
          izz="${wheel_mass / 2.0 * wheel_radius*wheel_radius}"/>
      </inertial>
    </link>

    <joint name="${prefix}right_wheel_joint" type="continuous">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}right_wheel"/>
      <origin xyz="0 ${-wheel_base/2} 0" rpy="${pi/2} 0 0"/>
      <axis xyz="0 0 -1"/> <!-- Note that "Forward" rotation is opposite compared to the left wheel -->
      <!-- <dynamics damping="0.2"/>
      <limit effort="100" velocity="1.0"/> -->
    </joint>

    <!-- right wheel Link -->
    <link name="${prefix}right_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <!-- Sphere has point-contact with the ground, which makes simulation more stable -->
          <sphere radius="${wheel_radius}"/> 
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" ixy="0.0" ixz="0.0"
          iyy="${wheel_mass / 12.0 * (3*wheel_radius*wheel_radius + wheel_width*wheel_width)}" iyz="0.0"
          izz="${wheel_mass / 2.0 * wheel_radius*wheel_radius}"/>
      </inertial>
    </link>

    <joint name="${prefix}caster_wheel_joint" type="fixed">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}caster_wheel"/>
      <origin xyz="${caster_wheel_radius} 0 0" rpy="0 0 0"/>
    </joint>

    <!-- caster rear wheel Link -->
    <link name="${prefix}caster_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${caster_wheel_mass}"/>
        <inertia
          ixx="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" ixy="0.0" ixz="0.0"
          iyy="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" iyz="0.0"
          izz="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}"/>
      </inertial>
    </link>

    <!-- Hat joint -->
    <joint name="${prefix}hat_joint" type="fixed">
      <parent link="${prefix}chassis"/>
      <child link="${prefix}hat"/>
      <origin xyz="${chassis_length/2} 0 ${chassis_height}" rpy="0 0 0"/>
    </joint>

    <!-- Hat link -->
    <link name="${prefix}hat">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find protobot_description)/meshes/cowboy_hat.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="brown"/>
      </visual>
    </link>

  </xacro:macro>

</robot>
